// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using TCC.GestaoSaude.Models;

namespace TCC.GestaoSaude.DataAccess
{
    public partial class GestaoSaudeContext : DbContext
    {
        public GestaoSaudeContext()
        {
        }

        public GestaoSaudeContext(DbContextOptions<GestaoSaudeContext> options)
            : base(options)
        {
        }

        public virtual DbSet<A10RegistroEvolucaoEnfermagem> A10RegistroEvolucaoEnfermagem { get; set; }
        public virtual DbSet<A11RegistroEvolucaoMedicaDiaria> A11RegistroEvolucaoMedicaDiaria { get; set; }
        public virtual DbSet<A12Ocupacao> A12Ocupacao { get; set; }
        public virtual DbSet<A13Profissional> A13Profissional { get; set; }
        public virtual DbSet<A15CargaHorariaProfissional> A15CargaHorariaProfissional { get; set; }
        public virtual DbSet<A18ProcedimentoExame> A18ProcedimentoExame { get; set; }
        public virtual DbSet<A1Usuario> A1Usuario { get; set; }
        public virtual DbSet<A20TipoEstabelecimento> A20TipoEstabelecimento { get; set; }
        public virtual DbSet<A21Estabelecimento> A21Estabelecimento { get; set; }
        public virtual DbSet<A22Agenda> A22Agenda { get; set; }
        public virtual DbSet<A23TipoAgenda> A23TipoAgenda { get; set; }
        public virtual DbSet<A24RecomendacaoMedica> A24RecomendacaoMedica { get; set; }
        public virtual DbSet<A26Leito> A26Leito { get; set; }
        public virtual DbSet<A28CodigoInternacionalDoenca> A28CodigoInternacionalDoenca { get; set; }
        public virtual DbSet<A29Atendimento> A29Atendimento { get; set; }
        public virtual DbSet<A2UsuarioInterno> A2UsuarioInterno { get; set; }
        public virtual DbSet<A3InformacaoCadastro> A3InformacaoCadastro { get; set; }
        public virtual DbSet<A4CartaoVacinacao> A4CartaoVacinacao { get; set; }
        public virtual DbSet<A5Vacina> A5Vacina { get; set; }
        public virtual DbSet<A6Perfil> A6Perfil { get; set; }
        public virtual DbSet<A9Prontuario> A9Prontuario { get; set; }
        public virtual DbSet<RelAtendimentoProntuario> RelAtendimentoProntuario { get; set; }
        public virtual DbSet<RelEstabelecimentoLeito> RelEstabelecimentoLeito { get; set; }
        public virtual DbSet<RelHistoricoEvolucaoEnfermagem> RelHistoricoEvolucaoEnfermagem { get; set; }
        public virtual DbSet<RelHistoricoEvolucaoMedicaDiaria> RelHistoricoEvolucaoMedicaDiaria { get; set; }
        public virtual DbSet<RelHistoricoExamePaciente> RelHistoricoExamePaciente { get; set; }
        public virtual DbSet<RelProfissionalOcupacao> RelProfissionalOcupacao { get; set; }
        public virtual DbSet<RelProntuarioRecomendacaoMedica> RelProntuarioRecomendacaoMedica { get; set; }
        public virtual DbSet<RelUsuarioInternoPerfil> RelUsuarioInternoPerfil { get; set; }
        public virtual DbSet<RelUsuarioPerfil> RelUsuarioPerfil { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<A10RegistroEvolucaoEnfermagem>(entity =>
            {
                entity.HasIndex(e => e.A13ProfissionalCodigoSus)
                    .HasName("A10_RegistroEvolucaoEnfermagem_FKIndex1");

                entity.Property(e => e.A10RegistroEvolucaoEnfermagemDescrição).IsUnicode(false);

                entity.Property(e => e.A13ProfissionalCodigoSus).IsUnicode(false);

                entity.HasOne(d => d.A13ProfissionalCodigoSusNavigation)
                    .WithMany(p => p.A10RegistroEvolucaoEnfermagem)
                    .HasForeignKey(d => d.A13ProfissionalCodigoSus)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__A10_Regis__A13_P__6ABAD62E");
            });

            modelBuilder.Entity<A11RegistroEvolucaoMedicaDiaria>(entity =>
            {
                entity.HasIndex(e => e.A13ProfissionalCodigoSus)
                    .HasName("A11_RegistroEvolucaoMedicaDiaria_FKIndex1");

                entity.Property(e => e.A11RegistroEvolucaoMedicaDiariaDescricao).IsUnicode(false);

                entity.Property(e => e.A13ProfissionalCodigoSus).IsUnicode(false);

                entity.HasOne(d => d.A13ProfissionalCodigoSusNavigation)
                    .WithMany(p => p.A11RegistroEvolucaoMedicaDiaria)
                    .HasForeignKey(d => d.A13ProfissionalCodigoSus)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__A11_Regis__A13_P__67DE6983");
            });

            modelBuilder.Entity<A12Ocupacao>(entity =>
            {
                entity.HasKey(e => e.A12OcupacaoCodigo)
                    .HasName("PK__A12_Ocup__DA9D2023CDA3D3AB");

                entity.Property(e => e.A12OcupacaoCodigo).IsUnicode(false);

                entity.Property(e => e.A12OcupacaoDescricao).IsUnicode(false);
            });

            modelBuilder.Entity<A13Profissional>(entity =>
            {
                entity.HasKey(e => e.A13ProfissionalCodigoSus)
                    .HasName("PK__A13_Prof__CD06EFDEF3F61B0A");

                entity.Property(e => e.A13ProfissionalCodigoSus).IsUnicode(false);

                entity.Property(e => e.A13ProfissionalCodigoCns).IsUnicode(false);

                entity.Property(e => e.A13ProfissionalNome).IsUnicode(false);
            });

            modelBuilder.Entity<A15CargaHorariaProfissional>(entity =>
            {
                entity.HasIndex(e => e.A13ProfissionalCodigoSus)
                    .HasName("A15_CargaHorariaProfissional_FKIndex1");

                entity.Property(e => e.A15CargaHorariaProfissionalId).ValueGeneratedNever();

                entity.Property(e => e.A13ProfissionalCodigoSus).IsUnicode(false);

                entity.Property(e => e.A15CargaHorariaProfissionalQtCargaHorariaAmbulatorial).ValueGeneratedOnAdd();

                entity.HasOne(d => d.A13ProfissionalCodigoSusNavigation)
                    .WithMany(p => p.A15CargaHorariaProfissional)
                    .HasForeignKey(d => d.A13ProfissionalCodigoSus)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__A15_Carga__A13_P__6501FCD8");
            });

            modelBuilder.Entity<A18ProcedimentoExame>(entity =>
            {
                entity.Property(e => e.A18ProcedimentoExameCapitulo).IsUnicode(false);

                entity.Property(e => e.A18ProcedimentoExameGrupo).IsUnicode(false);

                entity.Property(e => e.A18ProcedimentoExameNome).IsUnicode(false);

                entity.Property(e => e.A18ProcedimentoExameSubGrupo).IsUnicode(false);
            });

            modelBuilder.Entity<A1Usuario>(entity =>
            {
                entity.Property(e => e.A1UsuarioId).ValueGeneratedNever();

                entity.Property(e => e.A1UsuarioNome).IsUnicode(false);

                entity.Property(e => e.A1UsuarioNumeroCpf).IsUnicode(false);

                entity.Property(e => e.A1UsuarioSenha).IsUnicode(false);
            });

            modelBuilder.Entity<A20TipoEstabelecimento>(entity =>
            {
                entity.Property(e => e.A20TipoEstabelecimentoCodigo).IsUnicode(false);

                entity.Property(e => e.A20TipoEstabelecimentoDescricao).IsUnicode(false);
            });

            modelBuilder.Entity<A21Estabelecimento>(entity =>
            {
                entity.HasIndex(e => e.A20TipoEstabelecimentoId)
                    .HasName("A21_Estabelecimento_FKIndex1");

                entity.Property(e => e.A21EstabelecimentoBairro).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoCep).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoCnpj).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoCodigoEstabelecimento).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoCodigoUnidade).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoComplemento).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoEmail).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoEndereco).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoFax).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoLatitude).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoLogradouro).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoLongitude).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoNomeFantasia).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoNumero).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoRazaoSocial).IsUnicode(false);

                entity.Property(e => e.A21EstabelecimentoTelefone).IsUnicode(false);

                entity.HasOne(d => d.A20TipoEstabelecimento)
                    .WithMany(p => p.A21Estabelecimento)
                    .HasForeignKey(d => d.A20TipoEstabelecimentoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__A21_Estab__A20_T__7073AF84");
            });

            modelBuilder.Entity<A22Agenda>(entity =>
            {
                entity.HasIndex(e => e.A12OcupacaoCodigo)
                    .HasName("A22_Agenda_FKIndex2");

                entity.HasIndex(e => e.A23TipoAgendaId)
                    .HasName("A22_Agenda_FKIndex1");

                entity.Property(e => e.A12OcupacaoCodigo).IsUnicode(false);

                entity.HasOne(d => d.A12OcupacaoCodigoNavigation)
                    .WithMany(p => p.A22Agenda)
                    .HasForeignKey(d => d.A12OcupacaoCodigo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__A22_Agend__A12_O__0B27A5C0");

                entity.HasOne(d => d.A23TipoAgenda)
                    .WithMany(p => p.A22Agenda)
                    .HasForeignKey(d => d.A23TipoAgendaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__A22_Agend__A23_T__0A338187");
            });

            modelBuilder.Entity<A23TipoAgenda>(entity =>
            {
                entity.Property(e => e.A23TipoAgendaDescricao).IsUnicode(false);
            });

            modelBuilder.Entity<A24RecomendacaoMedica>(entity =>
            {
                entity.HasIndex(e => e.A13ProfissionalCodigoSus)
                    .HasName("A24_RecomendacaoMedica_FKIndex1");

                entity.Property(e => e.A13ProfissionalCodigoSus).IsUnicode(false);

                entity.Property(e => e.A24RecomendacaoMedicaRecomendacao).IsUnicode(false);

                entity.HasOne(d => d.A13ProfissionalCodigoSusNavigation)
                    .WithMany(p => p.A24RecomendacaoMedica)
                    .HasForeignKey(d => d.A13ProfissionalCodigoSus)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__A24_Recom__A13_P__6D9742D9");
            });

            modelBuilder.Entity<A26Leito>(entity =>
            {
                entity.Property(e => e.A26LeitoDescricao).IsUnicode(false);
            });

            modelBuilder.Entity<A28CodigoInternacionalDoenca>(entity =>
            {
                entity.Property(e => e.A28CodigoInternacionalDoencaCodigo).IsUnicode(false);

                entity.Property(e => e.A28CodigoInternacionalDoencaValor).IsUnicode(false);
            });

            modelBuilder.Entity<A29Atendimento>(entity =>
            {
                entity.HasIndex(e => e.A3InformacaoCadastroId)
                    .HasName("A29_Atendimento_FKIndex1");

                entity.HasOne(d => d.A3InformacaoCadastro)
                    .WithMany(p => p.A29Atendimento)
                    .HasForeignKey(d => d.A3InformacaoCadastroId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__A29_Atend__A3_In__6225902D");
            });

            modelBuilder.Entity<A2UsuarioInterno>(entity =>
            {
                entity.Property(e => e.A2UsuarioInternoEmail).IsUnicode(false);

                entity.Property(e => e.A2UsuarioInternoNome).IsUnicode(false);

                entity.Property(e => e.A2UsuarioInternoSenha).IsUnicode(false);

                entity.Property(e => e.A2UsuarioInternoTelefone).IsUnicode(false);
            });

            modelBuilder.Entity<A3InformacaoCadastro>(entity =>
            {
                entity.HasIndex(e => e.A1UsuarioId)
                    .HasName("A3_InformacaoCadastro_FKIndex1");

                entity.Property(e => e.A3InformacaoCadastroId).ValueGeneratedNever();

                entity.Property(e => e.A3InformacaoCadastroCelular).IsUnicode(false);

                entity.Property(e => e.A3InformacaoCadastroEmail).IsUnicode(false);

                entity.Property(e => e.A3InformacaoCadastroNomeCompleto).IsUnicode(false);

                entity.Property(e => e.A3InformacaoCadastroNomeMae).IsUnicode(false);

                entity.Property(e => e.A3InformacaoCadastroNomePai).IsUnicode(false);

                entity.Property(e => e.A3InformacaoCadastroNumeroCarteiraNacionalSaude).IsUnicode(false);

                entity.Property(e => e.A3InformacaoCadastroTelefone).IsUnicode(false);

                entity.HasOne(d => d.A1Usuario)
                    .WithMany(p => p.A3InformacaoCadastro)
                    .HasForeignKey(d => d.A1UsuarioId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__A3_Inform__A1_Us__5F492382");
            });

            modelBuilder.Entity<A4CartaoVacinacao>(entity =>
            {
                entity.HasIndex(e => e.A3InformacaoCadastroId)
                    .HasName("A4_CartaoVacinacao_FKIndex1");

                entity.HasOne(d => d.A3InformacaoCadastro)
                    .WithMany(p => p.A4CartaoVacinacao)
                    .HasForeignKey(d => d.A3InformacaoCadastroId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__A4_Cartao__A3_In__1A69E950");
            });

            modelBuilder.Entity<A5Vacina>(entity =>
            {
                entity.HasIndex(e => e.A4CartaoVacinacaoId)
                    .HasName("A5_Vacina_FKIndex1");

                entity.Property(e => e.A5VacinaDescricao).IsUnicode(false);

                entity.HasOne(d => d.A4CartaoVacinacao)
                    .WithMany(p => p.A5Vacina)
                    .HasForeignKey(d => d.A4CartaoVacinacaoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__A5_Vacina__A4_Ca__1D4655FB");
            });

            modelBuilder.Entity<A6Perfil>(entity =>
            {
                entity.Property(e => e.A6PerfilDescricao).IsUnicode(false);
            });

            modelBuilder.Entity<A9Prontuario>(entity =>
            {
                entity.Property(e => e.A9ProntuarioCondutaTerapeuta).IsUnicode(false);

                entity.Property(e => e.A9ProntuarioDescricaoCirurgica).IsUnicode(false);

                entity.Property(e => e.A9ProntuarioDiagnosticoMedico).IsUnicode(false);

                entity.Property(e => e.A9ProntuarioHipotesesDiagnostica).IsUnicode(false);

                entity.Property(e => e.A9ProntuarioPrescricaoMedica).IsUnicode(false);

                entity.Property(e => e.A9ProntuarioRaciocinioMedico).IsUnicode(false);
            });

            modelBuilder.Entity<RelAtendimentoProntuario>(entity =>
            {
                entity.HasKey(e => new { e.A29AtendimentoId, e.A9ProntuarioId })
                    .HasName("PK__Rel_Aten__85EB3D10AACD0621");

                entity.HasIndex(e => e.A29AtendimentoId)
                    .HasName("A29_Atendimento_has_A9_Prontuario_FKIndex1");

                entity.HasIndex(e => e.A9ProntuarioId)
                    .HasName("A29_Atendimento_has_A9_Prontuario_FKIndex2");

                entity.HasOne(d => d.A29Atendimento)
                    .WithMany(p => p.RelAtendimentoProntuario)
                    .HasForeignKey(d => d.A29AtendimentoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Atend__A29_A__0662F0A3");

                entity.HasOne(d => d.A9Prontuario)
                    .WithMany(p => p.RelAtendimentoProntuario)
                    .HasForeignKey(d => d.A9ProntuarioId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Atend__A9_Pr__075714DC");
            });

            modelBuilder.Entity<RelEstabelecimentoLeito>(entity =>
            {
                entity.HasKey(e => new { e.A21EstabelecimentoId, e.A26LeitoId })
                    .HasName("PK__Rel_Esta__95DACE639E566FB5");

                entity.HasIndex(e => e.A21EstabelecimentoId)
                    .HasName("A21_Estabelecimento_has_A26_Leito_FKIndex1");

                entity.HasIndex(e => e.A26LeitoId)
                    .HasName("A21_Estabelecimento_has_A26_Leito_FKIndex2");

                entity.HasOne(d => d.A21Estabelecimento)
                    .WithMany(p => p.RelEstabelecimentoLeito)
                    .HasForeignKey(d => d.A21EstabelecimentoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Estab__A21_E__0E04126B");

                entity.HasOne(d => d.A26Leito)
                    .WithMany(p => p.RelEstabelecimentoLeito)
                    .HasForeignKey(d => d.A26LeitoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Estab__A26_L__0EF836A4");
            });

            modelBuilder.Entity<RelHistoricoEvolucaoEnfermagem>(entity =>
            {
                entity.HasKey(e => new { e.A9ProntuarioId, e.A10RegistroEvolucaoEnfermagemId })
                    .HasName("PK__Rel_Hist__1224C31378AA539A");

                entity.HasIndex(e => e.A10RegistroEvolucaoEnfermagemId)
                    .HasName("A9_Prontuario_has_A10_RegistroEvolucaoEnfermagem_FKIndex2");

                entity.HasIndex(e => e.A9ProntuarioId)
                    .HasName("A9_Prontuario_has_A10_RegistroEvolucaoEnfermagem_FKIndex1");

                entity.HasOne(d => d.A10RegistroEvolucaoEnfermagem)
                    .WithMany(p => p.RelHistoricoEvolucaoEnfermagem)
                    .HasForeignKey(d => d.A10RegistroEvolucaoEnfermagemId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Histo__A10_R__12C8C788");

                entity.HasOne(d => d.A9Prontuario)
                    .WithMany(p => p.RelHistoricoEvolucaoEnfermagem)
                    .HasForeignKey(d => d.A9ProntuarioId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Histo__A9_Pr__11D4A34F");
            });

            modelBuilder.Entity<RelHistoricoEvolucaoMedicaDiaria>(entity =>
            {
                entity.HasKey(e => new { e.A9ProntuarioId, e.A11RegistroEvolucaoMedicaDiariaId })
                    .HasName("PK__Rel_Hist__91314D8FB0B47B83");

                entity.HasIndex(e => e.A11RegistroEvolucaoMedicaDiariaId)
                    .HasName("A9_Prontuario_has_A11_RegistroEvolucaoMedicaDiaria_FKIndex2");

                entity.HasIndex(e => e.A9ProntuarioId)
                    .HasName("A9_Prontuario_has_A11_RegistroEvolucaoMedicaDiaria_FKIndex1");

                entity.HasOne(d => d.A11RegistroEvolucaoMedicaDiaria)
                    .WithMany(p => p.RelHistoricoEvolucaoMedicaDiaria)
                    .HasForeignKey(d => d.A11RegistroEvolucaoMedicaDiariaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Histo__A11_R__038683F8");

                entity.HasOne(d => d.A9Prontuario)
                    .WithMany(p => p.RelHistoricoEvolucaoMedicaDiaria)
                    .HasForeignKey(d => d.A9ProntuarioId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Histo__A9_Pr__02925FBF");
            });

            modelBuilder.Entity<RelHistoricoExamePaciente>(entity =>
            {
                entity.HasKey(e => new { e.A9ProntuarioId, e.A18ProcedimentoExameId })
                    .HasName("PK__Rel_Hist__9BEB42469C78F278");

                entity.HasIndex(e => e.A18ProcedimentoExameId)
                    .HasName("A9_Prontuario_has_A18_ProcedimentoExame_FKIndex2");

                entity.HasIndex(e => e.A9ProntuarioId)
                    .HasName("A9_Prontuario_has_A18_ProcedimentoExame_FKIndex1");

                entity.HasOne(d => d.A18ProcedimentoExame)
                    .WithMany(p => p.RelHistoricoExamePaciente)
                    .HasForeignKey(d => d.A18ProcedimentoExameId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Histo__A18_P__7814D14C");

                entity.HasOne(d => d.A9Prontuario)
                    .WithMany(p => p.RelHistoricoExamePaciente)
                    .HasForeignKey(d => d.A9ProntuarioId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Histo__A9_Pr__7720AD13");
            });

            modelBuilder.Entity<RelProfissionalOcupacao>(entity =>
            {
                entity.HasKey(e => new { e.A13ProfissionalCodigoSus, e.A12OcupacaoCodigo })
                    .HasName("PK__Rel_Prof__E0AF3DDC75C0E1AE");

                entity.HasIndex(e => e.A12OcupacaoCodigo)
                    .HasName("A13_Profissional_has_A12_Ocupacao_FKIndex2");

                entity.HasIndex(e => e.A13ProfissionalCodigoSus)
                    .HasName("A13_Profissional_has_A12_Ocupacao_FKIndex1");

                entity.HasIndex(e => e.A21EstabelecimentoId)
                    .HasName("Rel_ProfissionalOcupacao_FKIndex3");

                entity.Property(e => e.A13ProfissionalCodigoSus).IsUnicode(false);

                entity.Property(e => e.A12OcupacaoCodigo).IsUnicode(false);

                entity.HasOne(d => d.A12OcupacaoCodigoNavigation)
                    .WithMany(p => p.RelProfissionalOcupacao)
                    .HasForeignKey(d => d.A12OcupacaoCodigo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Profi__A12_O__1699586C");

                entity.HasOne(d => d.A13ProfissionalCodigoSusNavigation)
                    .WithMany(p => p.RelProfissionalOcupacao)
                    .HasForeignKey(d => d.A13ProfissionalCodigoSus)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Profi__A13_P__15A53433");

                entity.HasOne(d => d.A21Estabelecimento)
                    .WithMany(p => p.RelProfissionalOcupacao)
                    .HasForeignKey(d => d.A21EstabelecimentoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Profi__A21_E__178D7CA5");
            });

            modelBuilder.Entity<RelProntuarioRecomendacaoMedica>(entity =>
            {
                entity.HasKey(e => new { e.A9ProntuarioId, e.A24RecomendacaoMedicaId })
                    .HasName("PK__Rel_Pron__B9E48F1C9B43C934");

                entity.HasIndex(e => e.A24RecomendacaoMedicaId)
                    .HasName("A9_Prontuario_has_A24_RecomendacaoMedica_FKIndex2");

                entity.HasIndex(e => e.A9ProntuarioId)
                    .HasName("A9_Prontuario_has_A24_RecomendacaoMedica_FKIndex1");

                entity.HasOne(d => d.A24RecomendacaoMedica)
                    .WithMany(p => p.RelProntuarioRecomendacaoMedica)
                    .HasForeignKey(d => d.A24RecomendacaoMedicaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Pront__A24_R__74444068");

                entity.HasOne(d => d.A9Prontuario)
                    .WithMany(p => p.RelProntuarioRecomendacaoMedica)
                    .HasForeignKey(d => d.A9ProntuarioId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Pront__A9_Pr__73501C2F");
            });

            modelBuilder.Entity<RelUsuarioInternoPerfil>(entity =>
            {
                entity.HasKey(e => new { e.A2UsuarioInternoId, e.A6PerfilId })
                    .HasName("PK__Rel_Usua__A7FD08840A0EEB95");

                entity.HasIndex(e => e.A2UsuarioInternoId)
                    .HasName("A2_UsuarioInterno_has_A6_Perfil_FKIndex1");

                entity.HasIndex(e => e.A6PerfilId)
                    .HasName("A2_UsuarioInterno_has_A6_Perfil_FKIndex2");

                entity.HasOne(d => d.A2UsuarioInterno)
                    .WithMany(p => p.RelUsuarioInternoPerfil)
                    .HasForeignKey(d => d.A2UsuarioInternoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Usuar__A2_Us__7EC1CEDB");

                entity.HasOne(d => d.A6Perfil)
                    .WithMany(p => p.RelUsuarioInternoPerfil)
                    .HasForeignKey(d => d.A6PerfilId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Usuar__A6_Pe__7FB5F314");
            });

            modelBuilder.Entity<RelUsuarioPerfil>(entity =>
            {
                entity.HasKey(e => new { e.A1UsuarioId, e.A6PerfilId })
                    .HasName("PK__Rel_Usua__DEF6D35C55AD93C1");

                entity.HasIndex(e => e.A1UsuarioId)
                    .HasName("A1_Usuario_has_A6_Perfil_FKIndex1");

                entity.HasIndex(e => e.A6PerfilId)
                    .HasName("A1_Usuario_has_A6_Perfil_FKIndex2");

                entity.HasOne(d => d.A1Usuario)
                    .WithMany(p => p.RelUsuarioPerfil)
                    .HasForeignKey(d => d.A1UsuarioId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Usuar__A1_Us__7AF13DF7");

                entity.HasOne(d => d.A6Perfil)
                    .WithMany(p => p.RelUsuarioPerfil)
                    .HasForeignKey(d => d.A6PerfilId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Rel_Usuar__A6_Pe__7BE56230");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}